{"version":3,"file":"bootstrap-tabs.module.js","sources":["../js/bootstrap-tabs.js"],"sourcesContent":["/**\n *  Extens the bootstrap tabs.\n *\n * @param {object} element\n * @param {string} prefix\n *\n * @return {object}\n */\nwindow.BootstrapTabs = (function(element, prefix) {\n    'use strict';\n\n    var version = '1.0.0';\n\n    var globals = {\n        id:       null,\n        prefix:   'w2w_tab_',\n        autoOpen: true\n    };\n\n    // Array with the default elements for the bootstrap tabs.\n    var elements = {\n        error:   '.has-error',\n        tabPage: '.tab-pane',\n        tabItem: 'a[data-toggle=\"tab\"]'\n    };\n\n    // Array with the triggers for the bootstrap tabs.\n    var triggers = {\n        tabOpen: 'shown.bs.tab'\n    };\n\n    var functions = {\n        /**\n         * Public function.\n         * Listen to the bootstrap tabs, call a function if you click on a tab.\n         */\n        listen: function() {\n            element.find(elements.tabItem).on(triggers.tabOpen, functions.store);\n            functions.reload();\n        },\n\n        /**\n         * Private function.\n         * On a page reload, e.g. if you save the form, switch back to the last tab.\n         * If there is an error in a tab, switch to that tab.\n         */\n        reload: function() {\n            var tab = functions.getTab();\n            var errors = functions.errors();\n\n            if (!errors.length && !globals.autoOpen) {\n                return;\n            }\n\n            functions.open(tab);\n        },\n\n        /**\n         * Get the tab id that needs to be opened.\n         *\n         * @return {string}\n         */\n        getTab: function() {\n            var tab = localStorage.getItem(globals.prefix + globals.id);\n            var errorTabs = functions.errors();\n\n            if (errorTabs.length > 0) {\n                tab = '#' + errorTabs[0];\n            }\n\n            return tab;\n        },\n\n        /**\n         * Public function.\n         * Get all the tabs with errors.\n         *\n         * @return {array}\n         */\n        errors: function() {\n            var tabs = [];\n            var errorElements;\n\n            if (element.parent().find(elements.error).length < 1) {\n                return tabs;\n            }\n\n            errorElements = element.parent().find(elements.error).closest(elements.tabPage);\n            errorElements.each(function() {\n                tabs.push($(this).attr('id'));\n            });\n\n            return tabs;\n        },\n\n        /**\n         * Private function.\n         * When you click on a tab, call the function to store the tab in the localStorage.\n         */\n        store: function() {\n            var tab = $(this).attr('href');\n\n            functions.open(tab);\n        },\n\n        /**\n         * Public function.\n         * Open the bootstrap tab, and store the tab in the localStorage.\n         *\n         * @param {string} tab\n         */\n        open: function(tab) {\n            element.find('a[href=\"' + tab + '\"]').tab('show');\n            localStorage.setItem(globals.prefix + globals.id, tab);\n\n            console.log(\"TOM\")\n        },\n\n        /**\n         * Public function.\n         * Get the active tab.\n         *\n         * @return {string}\n         */\n        active: function() {\n            return element.parent().find(elements.tabPage + '.active').attr('id');\n        },\n\n        /**\n         * The id wil get the attribute for the name in the localstorage.\n         */\n        setGlobals: function() {\n            var autoOpen = element.parent().data('w2w-auto-open');\n\n            globals.id = element.parent().data('w2w-tabs');\n\n            if (!globals.id) {\n                globals.id = element.parent().attr('id');\n            }\n\n            if(prefix) {\n                globals.prefix = prefix;\n            }\n\n            if (autoOpen !== undefined) {\n                globals.autoOpen = autoOpen;\n            }\n        }\n    };\n\n    functions.setGlobals();\n\n    return {\n        element:  element,\n        active:   functions.active,\n        errors:   functions.errors,\n        elements: elements,\n        listen:   functions.listen,\n        open:     functions.open,\n        id:       globals.id,\n        version:  version\n    };\n});\n\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = window.BootstrapTabs;\n}\n"],"names":["window","BootstrapTabs","element","prefix","globals","id","autoOpen","elements","error","tabPage","tabItem","functions","listen","find","on","store","reload","tab","getTab","errors","length","open","localStorage","getItem","errorTabs","tabs","parent","closest","each","push","$","this","attr","setItem","console","log","active","setGlobals","data","undefined","version","module","exports"],"mappings":"AAQAA,OAAOC,cAAiB,SAASC,EAASC,GAGtC,IAEIC,EAAU,CACVC,GAAU,KACVF,OAAU,WACVG,UAAU,GAIVC,EAAW,CACXC,MAAS,aACTC,QAAS,YACTC,QAAS,wBAQTC,EAAY,CAKZC,OAAQ,WACJV,EAAQW,KAAKN,EAASG,SAASI,GAT1B,eAS+CH,EAAUI,OAC9DJ,EAAUK,UAQdA,OAAQ,WACJ,IAAIC,EAAMN,EAAUO,UACPP,EAAUQ,SAEXC,QAAWhB,EAAQE,WAI/BK,EAAUU,KAAKJ,IAQnBC,OAAQ,WACJ,IAAID,EAAMK,aAAaC,QAAQnB,EAAQD,OAASC,EAAQC,IACpDmB,EAAYb,EAAUQ,SAM1B,OAJIK,EAAUJ,OAAS,IACnBH,EAAM,IAAMO,EAAU,IAGnBP,GASXE,OAAQ,WACJ,IAAIM,EAAO,GAGX,OAAIvB,EAAQwB,SAASb,KAAKN,EAASC,OAAOY,OAAS,GAInClB,EAAQwB,SAASb,KAAKN,EAASC,OAAOmB,QAAQpB,EAASE,SACzDmB,KAAK,WACfH,EAAKI,KAAKC,EAAEC,MAAMC,KAAK,SALhBP,GAefV,MAAO,WACH,IAAIE,EAAMa,EAAEC,MAAMC,KAAK,QAEvBrB,EAAUU,KAAKJ,IASnBI,KAAM,SAASJ,GACXf,EAAQW,KAAK,WAAaI,EAAM,MAAMA,IAAI,QAC1CK,aAAaW,QAAQ7B,EAAQD,OAASC,EAAQC,GAAIY,GAElDiB,QAAQC,IAAI,QAShBC,OAAQ,WACJ,OAAOlC,EAAQwB,SAASb,KAAKN,EAASE,QAAU,WAAWuB,KAAK,OAMpEK,WAAY,WACR,IAAI/B,EAAWJ,EAAQwB,SAASY,KAAK,iBAErClC,EAAQC,GAAKH,EAAQwB,SAASY,KAAK,YAE9BlC,EAAQC,KACTD,EAAQC,GAAKH,EAAQwB,SAASM,KAAK,OAGpC7B,IACCC,EAAQD,OAASA,QAGJoC,IAAbjC,IACAF,EAAQE,SAAWA,KAO/B,OAFAK,EAAU0B,aAEH,CACHnC,QAAUA,EACVkC,OAAUzB,EAAUyB,OACpBjB,OAAUR,EAAUQ,OACpBZ,SAAUA,EACVK,OAAUD,EAAUC,OACpBS,KAAUV,EAAUU,KACpBhB,GAAUD,EAAQC,GAClBmC,QArJU,UAyJI,oBAAXC,QAA0BA,OAAOC,UACxCD,OAAOC,QAAU1C,OAAOC"}